# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master

jobs:

- job: 'Test'
  displayName: "Build and test"

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  # Checkout validator.
  - bash: |
      set -x
      if [ -n "$(System.PullRequest.SourceCommitId)" ]; then
        git checkout $(System.PullRequest.SourceCommitId)
      fi
    displayName: 'Checkout pull request HEAD'

  # Dependency manager
  - bash: |
      sudo apt-get install -qq gcc g++ make libgl-dev cmake python3-pip python-numpy dos2unix
    displayName: 'Install dependencies from Aptitude'

  # Debug info before main scripts start
  - bash: |
      ls -al
    displayName: 'Get debugging information'

  # Create build dir
  - bash: |
      mkdir -p bin
    displayName: 'Create build directory'

# Move OS specific qt lib in
# Move externalApps into bin to trick CMake
# - bash: |
#       mv ./binaries/qt5.12.1_linux.zip ./bin/qt.zip
#       mv ./binaries/externalApps.zip ./bin/
#       cd bin
#       unzip externalApps.zip &> /dev/null
#   displayName: 'Install Qt & external applications'

# Create fake test dirs
  - bash: |   
      cd bin
      mkdir -p testing
      mkdir -p ./testing/TestData
    displayName: 'Create phony tests'

# Configure and build superbuild
  - bash: |
      cd bin
      cmake -DCMAKE_INSTALL_PREFIX="./install/appdir/usr" -DBUILD_DOCUMENTATION=OFF -DQT_DOWNLOAD_FORCE=ON ..
      make -j2
    displayName: 'Configure and compile superbuild'