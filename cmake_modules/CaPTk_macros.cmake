# CAPTK_ADD_EXECUTABLE
# Add executable -> install for each platform -> run test -> add cwl
MACRO(CAPTK_ADD_EXECUTABLE APPLICATION)
  ADD_EXECUTABLE(${APPLICATION}
    ${PROJECT_SOURCE_DIR}/src/applications/${APPLICATION}.cxx
    #${CBICA-TK_SOURCES}
    #${YAMLCPP_Headers}
    #${YAMLCPP_Sources}
    #${APPLICATION_DEPENDS}
  )

  TARGET_LINK_LIBRARIES(${APPLICATION}
    #${DEPENDENT_LIBS}
    ${LIBNAME_CBICATK}
    ${LIBNAME_Applications}
    ${LIBNAME_FeatureExtractor}
  )

  SET_TARGET_PROPERTIES( ${APPLICATION} PROPERTIES FOLDER "${StandAloneCLIAppsFolder}" )

  ADD_DEPENDENCIES( ${APPLICATION} ${LIBNAME_Applications} ${LIBNAME_FeatureExtractor} ${LIBNAME_CBICATK} )

  IF (APPLE) 
    # list (APPEND STANDALONE_APPS_LIST ${APPLICATION})
    INSTALL( TARGETS ${APPLICATION}
    BUNDLE DESTINATION .
    RUNTIME DESTINATION ${EXE_NAME}.app/Contents/Resources/bin
    LIBRARY DESTINATION ${EXE_NAME}.app/Contents/Resources/lib
    CONFIGURATIONS "${CMAKE_CONFIGURATION_TYPES}"
    PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
  ) 

  ELSE()
    INSTALL( TARGETS ${APPLICATION}
    BUNDLE DESTINATION .
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    CONFIGURATIONS "${CMAKE_CONFIGURATION_TYPES}"
    PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
  )

  ENDIF()
ENDMACRO()