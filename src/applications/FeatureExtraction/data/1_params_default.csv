FeatureName,ParamName,Type,Range,Default,Comments
Generic,Quantization_Extent,String,Image:ROI,ROI,Whether the quantization of Intensities is supposed to happen on a per-image basis or on a per-ROI basis
Generic,Quantization_Type,String,FixedBinNumber:FixedBinSize:Equal,FixedBinNumber,FixedBinNumber (FBN): the bins are uniformly distributed across the minimum and maximum extent in the ROI/Image as defined under "Quantization_Extent"; FixedBinSize (FBS): bins are added in a fixed step between the minimum and maximum extent in the ROI/Image as defined under "Quantization_Extent" the requested size is provided in 'Bins'; Equal: each bin holds an equal number of intensities
Generic,Resampling,mm,0:10,1.0,Resamples all images and masks to this value of voxel/pixel resolution before computations (0: no resampling): reduce this number of more accuracy
Generic,ResamplingInterpolator_Image,mm,Nearest:Linear:BSpline,Linear,Type of interpolator to use if resampling is happening, ignored if m_resamplingResolution = 0
Generic,ResamplingInterpolator_Mask,mm,Nearest:NearestLabel:Linear:BSpline,Nearest,Type of interpolator to use if resampling is happening, ignored if m_resamplingResolution = 0
Intensity,,,,,
Morphologic,Range,Int,(0:25),0,0:largest connected component in ROI; N: all connected components larger than (N*10^-6) of total image size are taken into account
Volumetric,Dimension,String,[2D:3D],3D,For calculating 2D slice (maximum area along specified axis) or full 3D volume features
Histogram,Bins,Int,,20,The number of bins (FBN) or size of each bin (FBS) to calculate for the Histogram
Histogram,Bins_Min,Int,,20,The number of bins (FBN) or size of each bin (FBS) to calculate for the Histogram
GLCM,Bins,Int,,20,The number of bins (FBN) or size of each bin (FBS) to calculate for the Histogram
GLCM,Radius,Int,(1:9),1,Radius around the center voxel which can be in mm as well (needs to be defined as float in same space as input image/mask)
GLCM,Offset,String,[Individual:Average:Combined],Average,Either individual offset values or averagedcomputation for individual offsets might not work)
GLRLM,Bins,Int,,20,The number of bins (FBN) or size of each bin (FBS) to calculate for the Histogram
GLRLM,Radius,Int,(1:9),1,Radius around the center voxel which can be in mm as well (needs to be defined as float in same space as input image/mask)
GLRLM,Offset,String,[Individual:Average:Combined],Individual,Either individual offset values or averaged
GLSZM,Bins,Int,,20,The number of bins (FBN) or size of each bin (FBS) to calculate for the Histogram
GLSZM,Radius,Int,(1:9),1,Radius around the center voxel
NGTDM,Bins,Int,,20,The number of bins (FBN) or size of each bin (FBS) to calculate for the Histogram
NGTDM,Radius,Int,(1:9),1,Radius around the center voxel
NGTDM,Offset,String,[Individual:Average],Average,Either individual offset values or averaged
NGLDM,Bins,Int,,20,,The number of bins (FBN) or size of each bin (FBS) to calculate for the Histogram
NGLDM,Radius,Int,(1:9),1,Radius around the center voxel,
NGLDM,Offset,String,[Individual:Average],Average,Either individual offset values or averaged,
LBP,Radius,Int,(1:9),1,Radius around the center voxel/pixel (if defined as float it is assumed to be in world coordinates and if as Integer it is assumed to be in image coordinates)
LBP,Neighborhood,Int,0:27,27,The total number of neighbors to consider for computation
LBP,Type,Int,0:3,2,0: original LBP | 1: uniform LBP | 2: rotation invariant LBP | 3: uniform + rotation invariant LBP
Lattice,FullImage,Int,0:1,0,Whether computations across the entire image need to happen in addition to lattice
Lattice,Window,mm,0:ImageSize,6.3,Window of single lattice node (number based on experiments by CBIG) - should be same as Step for non-overlapping tiles
Lattice,Step,mm,0:ImageSize,6.3,Step size to increase for consecutive lattice node (number based on experiments by CBIG) - should be same as Step for non-overlapping tiles
Lattice,Boundary,String,[NoPadding:ZeroPadding:FluxNeumann],NoPadding,The boundary condition to use for lattice construction
Lattice,PatchBoundary,String,[Full:ROI:None],Full,Full considers all non-zero pixels and adds weight whereas ROI considers only the indeces having same value as center pixel and None disregards the patch
